Python 2.7.12 (default, Jul  1 2016, 15:12:24) 
[GCC 5.4.0 20160609] on linux2
Type "copyright", "credits" or "license()" for more information.
>>> import numpy as np
>>> import Gnuplto

Traceback (most recent call last):
  File "<pyshell#1>", line 1, in <module>
    import Gnuplto
ImportError: No module named Gnuplto
>>> import Gnuplot
>>> ### so the def. of the gaussian function (probability density function) is: f(x) = (1/(sigma*sqrt(2pi)))*exp((-x-mu)**2/(2*sigma**2)
>>> x= np.arrange(1,100, 0.5)

Traceback (most recent call last):
  File "<pyshell#4>", line 1, in <module>
    x= np.arrange(1,100, 0.5)
AttributeError: 'module' object has no attribute 'arrange'
>>> x=np.arange(1,100, 0.5)
>>> x
array([  1. ,   1.5,   2. ,   2.5,   3. ,   3.5,   4. ,   4.5,   5. ,
         5.5,   6. ,   6.5,   7. ,   7.5,   8. ,   8.5,   9. ,   9.5,
        10. ,  10.5,  11. ,  11.5,  12. ,  12.5,  13. ,  13.5,  14. ,
        14.5,  15. ,  15.5,  16. ,  16.5,  17. ,  17.5,  18. ,  18.5,
        19. ,  19.5,  20. ,  20.5,  21. ,  21.5,  22. ,  22.5,  23. ,
        23.5,  24. ,  24.5,  25. ,  25.5,  26. ,  26.5,  27. ,  27.5,
        28. ,  28.5,  29. ,  29.5,  30. ,  30.5,  31. ,  31.5,  32. ,
        32.5,  33. ,  33.5,  34. ,  34.5,  35. ,  35.5,  36. ,  36.5,
        37. ,  37.5,  38. ,  38.5,  39. ,  39.5,  40. ,  40.5,  41. ,
        41.5,  42. ,  42.5,  43. ,  43.5,  44. ,  44.5,  45. ,  45.5,
        46. ,  46.5,  47. ,  47.5,  48. ,  48.5,  49. ,  49.5,  50. ,
        50.5,  51. ,  51.5,  52. ,  52.5,  53. ,  53.5,  54. ,  54.5,
        55. ,  55.5,  56. ,  56.5,  57. ,  57.5,  58. ,  58.5,  59. ,
        59.5,  60. ,  60.5,  61. ,  61.5,  62. ,  62.5,  63. ,  63.5,
        64. ,  64.5,  65. ,  65.5,  66. ,  66.5,  67. ,  67.5,  68. ,
        68.5,  69. ,  69.5,  70. ,  70.5,  71. ,  71.5,  72. ,  72.5,
        73. ,  73.5,  74. ,  74.5,  75. ,  75.5,  76. ,  76.5,  77. ,
        77.5,  78. ,  78.5,  79. ,  79.5,  80. ,  80.5,  81. ,  81.5,
        82. ,  82.5,  83. ,  83.5,  84. ,  84.5,  85. ,  85.5,  86. ,
        86.5,  87. ,  87.5,  88. ,  88.5,  89. ,  89.5,  90. ,  90.5,
        91. ,  91.5,  92. ,  92.5,  93. ,  93.5,  94. ,  94.5,  95. ,
        95.5,  96. ,  96.5,  97. ,  97.5,  98. ,  98.5,  99. ,  99.5])
>>> def Gaussian :
	
SyntaxError: invalid syntax
>>> def Gaussian(x, mu, sigma) :
	y = (1/(sigma*np.sqrt(2*np.pi)))*np.exp((-(x-mu)**2/2*sigma**2))
	return y

>>> y = Gaussian(x, 0, 1)
>>> y
array([  2.41970725e-001,   1.29517596e-001,   5.39909665e-002,
         1.75283005e-002,   4.43184841e-003,   8.72682695e-004,
         1.33830226e-004,   1.59837411e-005,   1.48671951e-006,
         1.07697600e-007,   6.07588285e-009,   2.66955661e-010,
         9.13472041e-012,   2.43432053e-013,   5.05227108e-015,
         8.16623563e-017,   1.02797736e-018,   1.00779354e-020,
         7.69459863e-023,   4.57537559e-025,   2.11881925e-027,
         7.64165541e-030,   2.14638374e-032,   4.69519536e-035,
         7.99882776e-038,   1.06126881e-040,   1.09660656e-043,
         8.82475497e-047,   5.53070955e-050,   2.69951302e-053,
         1.02616307e-056,   3.03790170e-060,   7.00418213e-064,
         1.25767238e-067,   1.75874954e-071,   1.91543249e-075,
         1.62463604e-079,   1.07317783e-083,   5.52094836e-088,
         2.21198438e-092,   6.90202942e-097,   1.67725052e-101,
         3.17428155e-106,   4.67863682e-111,   5.37056037e-116,
         4.80116079e-121,   3.34271444e-126,   1.81250279e-131,
         7.65392974e-137,   2.51719371e-142,   6.44725997e-148,
         1.28605667e-153,   1.99788926e-159,   2.41718058e-165,
         2.27757748e-171,   1.67133537e-177,   9.55169454e-184,
         4.25131835e-190,   1.47364613e-196,   3.97822343e-203,
         8.36395161e-210,   1.36949431e-216,   1.74636626e-223,
         1.73435026e-230,   1.34141967e-237,   8.08014041e-245,
         3.79052640e-252,   1.38486208e-259,   3.94039628e-267,
         8.73171710e-275,   1.50690472e-282,   2.02534172e-290,
         2.12000655e-298,   1.72823373e-306,   1.09722105e-314,
         5.43472210e-323,   0.00000000e+000,   0.00000000e+000,
         0.00000000e+000,   0.00000000e+000,   0.00000000e+000,
         0.00000000e+000,   0.00000000e+000,   0.00000000e+000,
         0.00000000e+000,   0.00000000e+000,   0.00000000e+000,
         0.00000000e+000,   0.00000000e+000,   0.00000000e+000,
         0.00000000e+000,   0.00000000e+000,   0.00000000e+000,
         0.00000000e+000,   0.00000000e+000,   0.00000000e+000,
         0.00000000e+000,   0.00000000e+000,   0.00000000e+000,
         0.00000000e+000,   0.00000000e+000,   0.00000000e+000,
         0.00000000e+000,   0.00000000e+000,   0.00000000e+000,
         0.00000000e+000,   0.00000000e+000,   0.00000000e+000,
         0.00000000e+000,   0.00000000e+000,   0.00000000e+000,
         0.00000000e+000,   0.00000000e+000,   0.00000000e+000,
         0.00000000e+000,   0.00000000e+000,   0.00000000e+000,
         0.00000000e+000,   0.00000000e+000,   0.00000000e+000,
         0.00000000e+000,   0.00000000e+000,   0.00000000e+000,
         0.00000000e+000,   0.00000000e+000,   0.00000000e+000,
         0.00000000e+000,   0.00000000e+000,   0.00000000e+000,
         0.00000000e+000,   0.00000000e+000,   0.00000000e+000,
         0.00000000e+000,   0.00000000e+000,   0.00000000e+000,
         0.00000000e+000,   0.00000000e+000,   0.00000000e+000,
         0.00000000e+000,   0.00000000e+000,   0.00000000e+000,
         0.00000000e+000,   0.00000000e+000,   0.00000000e+000,
         0.00000000e+000,   0.00000000e+000,   0.00000000e+000,
         0.00000000e+000,   0.00000000e+000,   0.00000000e+000,
         0.00000000e+000,   0.00000000e+000,   0.00000000e+000,
         0.00000000e+000,   0.00000000e+000,   0.00000000e+000,
         0.00000000e+000,   0.00000000e+000,   0.00000000e+000,
         0.00000000e+000,   0.00000000e+000,   0.00000000e+000,
         0.00000000e+000,   0.00000000e+000,   0.00000000e+000,
         0.00000000e+000,   0.00000000e+000,   0.00000000e+000,
         0.00000000e+000,   0.00000000e+000,   0.00000000e+000,
         0.00000000e+000,   0.00000000e+000,   0.00000000e+000,
         0.00000000e+000,   0.00000000e+000,   0.00000000e+000,
         0.00000000e+000,   0.00000000e+000,   0.00000000e+000,
         0.00000000e+000,   0.00000000e+000,   0.00000000e+000,
         0.00000000e+000,   0.00000000e+000,   0.00000000e+000,
         0.00000000e+000,   0.00000000e+000,   0.00000000e+000,
         0.00000000e+000,   0.00000000e+000,   0.00000000e+000,
         0.00000000e+000,   0.00000000e+000,   0.00000000e+000,
         0.00000000e+000,   0.00000000e+000,   0.00000000e+000])
>>> g= Gnuplot.Gnuplot()
>>> g.xlabel('x')
>>> g.ylabel('y')
>>> g('set term pngcairo'_
  
SyntaxError: invalid syntax
>>> g('set term pngcairo')
>>> g('set out 'gaussian_function.png')
  
SyntaxError: invalid syntax
>>> g('set out "gaussian_function.png")
  
SyntaxError: EOL while scanning string literal
>>> g('set out "gaussian_function.png"')
>>> g.plot(Gnuplot.Data(x,y))
>>> def Gaussian(x, mu, sigma) :
	y = (1/(sigma*np.sqrt(2*np.pi)))*np.exp((-(x-mu)np.exp(2)/2*sigmanp.exp(2)))
	return y
SyntaxError: invalid syntax
>>> def Gaussian(x, mu, sigma) :
	y = (1/(sigma*np.sqrt(2*np.pi)))*np.exp((-(x-mu)np.exp(2)/2*sigmanp.exp(2)))
	return y
SyntaxError: invalid syntax
>>> np.exp(2[3])

Traceback (most recent call last):
  File "<pyshell#25>", line 1, in <module>
    np.exp(2[3])
TypeError: 'int' object has no attribute '__getitem__'
>>> np.exp(2[,3])
SyntaxError: invalid syntax
>>> np.exp(2[, 3])
SyntaxError: invalid syntax
>>> def Gaussian(x, mu, sigma) :
	y = (1/(sigma*np.sqrt(2*np.pi)))*np.exp((-(x-mu)*np.exp(2)/2*sigma*np.exp(2)))
	return y

>>> y = Gaussian(x, 0, 1)
>>> y
array([  5.55996970e-013,   6.56377378e-019,   7.74880593e-025,
         9.14778532e-031,   1.07993382e-036,   1.27490646e-042,
         1.50507972e-048,   1.77680874e-054,   2.09759608e-060,
         2.47629877e-066,   2.92337293e-072,   3.45116244e-078,
         4.07423974e-084,   4.80980822e-090,   5.67817718e-096,
         6.70332258e-102,   7.91354906e-108,   9.34227138e-114,
         1.10289371e-119,   1.30201155e-125,   1.53707839e-131,
         1.81458450e-137,   2.14219192e-143,   2.52894600e-149,
         2.98552516e-155,   3.52453571e-161,   4.16085992e-167,
         4.91206692e-173,   5.79889779e-179,   6.84583826e-185,
         8.08179469e-191,   9.54089230e-197,   1.12634173e-202,
         1.32969291e-208,   1.56975738e-214,   1.85316339e-220,
         2.18773589e-226,   2.58271254e-232,   3.04899878e-238,
         3.59946894e-244,   4.24932169e-250,   5.01649969e-256,
         5.92218499e-262,   6.99138388e-268,   8.25361731e-274,
         9.74373599e-280,   1.15028826e-285,   1.35796278e-291,
         1.60313113e-297,   1.89256248e-303,   2.23424815e-309,
         2.63762218e-315,   3.11261357e-321,   0.00000000e+000,
         0.00000000e+000,   0.00000000e+000,   0.00000000e+000,
         0.00000000e+000,   0.00000000e+000,   0.00000000e+000,
         0.00000000e+000,   0.00000000e+000,   0.00000000e+000,
         0.00000000e+000,   0.00000000e+000,   0.00000000e+000,
         0.00000000e+000,   0.00000000e+000,   0.00000000e+000,
         0.00000000e+000,   0.00000000e+000,   0.00000000e+000,
         0.00000000e+000,   0.00000000e+000,   0.00000000e+000,
         0.00000000e+000,   0.00000000e+000,   0.00000000e+000,
         0.00000000e+000,   0.00000000e+000,   0.00000000e+000,
         0.00000000e+000,   0.00000000e+000,   0.00000000e+000,
         0.00000000e+000,   0.00000000e+000,   0.00000000e+000,
         0.00000000e+000,   0.00000000e+000,   0.00000000e+000,
         0.00000000e+000,   0.00000000e+000,   0.00000000e+000,
         0.00000000e+000,   0.00000000e+000,   0.00000000e+000,
         0.00000000e+000,   0.00000000e+000,   0.00000000e+000,
         0.00000000e+000,   0.00000000e+000,   0.00000000e+000,
         0.00000000e+000,   0.00000000e+000,   0.00000000e+000,
         0.00000000e+000,   0.00000000e+000,   0.00000000e+000,
         0.00000000e+000,   0.00000000e+000,   0.00000000e+000,
         0.00000000e+000,   0.00000000e+000,   0.00000000e+000,
         0.00000000e+000,   0.00000000e+000,   0.00000000e+000,
         0.00000000e+000,   0.00000000e+000,   0.00000000e+000,
         0.00000000e+000,   0.00000000e+000,   0.00000000e+000,
         0.00000000e+000,   0.00000000e+000,   0.00000000e+000,
         0.00000000e+000,   0.00000000e+000,   0.00000000e+000,
         0.00000000e+000,   0.00000000e+000,   0.00000000e+000,
         0.00000000e+000,   0.00000000e+000,   0.00000000e+000,
         0.00000000e+000,   0.00000000e+000,   0.00000000e+000,
         0.00000000e+000,   0.00000000e+000,   0.00000000e+000,
         0.00000000e+000,   0.00000000e+000,   0.00000000e+000,
         0.00000000e+000,   0.00000000e+000,   0.00000000e+000,
         0.00000000e+000,   0.00000000e+000,   0.00000000e+000,
         0.00000000e+000,   0.00000000e+000,   0.00000000e+000,
         0.00000000e+000,   0.00000000e+000,   0.00000000e+000,
         0.00000000e+000,   0.00000000e+000,   0.00000000e+000,
         0.00000000e+000,   0.00000000e+000,   0.00000000e+000,
         0.00000000e+000,   0.00000000e+000,   0.00000000e+000,
         0.00000000e+000,   0.00000000e+000,   0.00000000e+000,
         0.00000000e+000,   0.00000000e+000,   0.00000000e+000,
         0.00000000e+000,   0.00000000e+000,   0.00000000e+000,
         0.00000000e+000,   0.00000000e+000,   0.00000000e+000,
         0.00000000e+000,   0.00000000e+000,   0.00000000e+000,
         0.00000000e+000,   0.00000000e+000,   0.00000000e+000,
         0.00000000e+000,   0.00000000e+000,   0.00000000e+000,
         0.00000000e+000,   0.00000000e+000,   0.00000000e+000,
         0.00000000e+000,   0.00000000e+000,   0.00000000e+000,
         0.00000000e+000,   0.00000000e+000,   0.00000000e+000,
         0.00000000e+000,   0.00000000e+000,   0.00000000e+000])
>>> x= np.arrange(-100,100, 0.5)

Traceback (most recent call last):
  File "<pyshell#32>", line 1, in <module>
    x= np.arrange(-100,100, 0.5)
AttributeError: 'module' object has no attribute 'arrange'
>>> x= np.arange(-100, 100, 0.5)
>>> y = Gaussian(x, 0, 1)

Warning (from warnings module):
  File "__main__", line 2
RuntimeWarning: overflow encountered in exp
>>> y = Gaussian(x, 0, 1)
>>> y = Gaussian(x, 0, 1)
>>> g.plot(Gnuplot.Data(x,y))
>>> 
>>> g.plot(Gnuplot.Data(x,y))
>>> x= np.arange(-100, 100, 0.5)
>>> y = Gaussian(x, 0, 1)
>>> g.plot(Gnuplot.Data(x,y))
>>> # why does it show only the positive part of the x axis??
>>> g.set_range(xrange=[-100:100])
SyntaxError: invalid syntax
>>> g.set_range(xrange=[-100,100])

Traceback (most recent call last):
  File "<pyshell#45>", line 1, in <module>
    g.set_range(xrange=[-100,100])
TypeError: set_range() got an unexpected keyword argument 'xrange'
>>> g.set_range(-100, 100)

Traceback (most recent call last):
  File "<pyshell#46>", line 1, in <module>
    g.set_range(-100, 100)
  File "/usr/lib/python2.7/dist-packages/Gnuplot/_Gnuplot.py", line 437, in set_range
    (minrange,maxrange) = value
TypeError: 'int' object is not iterable
>>> g.set_range(-100, 100)

Traceback (most recent call last):
  File "<pyshell#47>", line 1, in <module>
    g.set_range(-100, 100)
  File "/usr/lib/python2.7/dist-packages/Gnuplot/_Gnuplot.py", line 437, in set_range
    (minrange,maxrange) = value
TypeError: 'int' object is not iterable
>>> # ok, I don't know yet how to set the x axis...
>>> 
